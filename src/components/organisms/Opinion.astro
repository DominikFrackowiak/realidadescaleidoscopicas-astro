---
import { twMerge } from 'tailwind-merge';

const wrapper =
	'flex flex-col mx-auto w-full px-4 md:px-0 md:max-w-[720px] lg:max-w-[1140px] gap-[40px]';
---

<section
	id='opina'
	class={twMerge(
		'flex justify-center items-center py-20 min-h-[80vh] w-full bg-lightRed'
	)}
>
	<div class={twMerge(wrapper)}>
		<h2
			class='flex flex-col text-white font-tavares text-2xl md:text-4xl font-semibold'
		>
			<span><span class='spanish'>?</span>Y tú</span>
			<span class='pl-20'>qué opinas?</span>
		</h2>
		<p class='w-full text-white text-xl'>
			¿Ya has escuchado algunos de los audios de las etapas en la que te
			encuentras? Redacta y envíanos tu experiencia o punto de vista sobre como
			este ámbito de vida podría ser más inclusivo. Tus palabras alimentarán el
			caleidoscopio, que combinando distintos puntos de vista, experiencias,
			vivencias quiere facilitar la construcción de un conocimiento que desde un
			enfoque interseccional y decolonial, incluya las diferencias como
			elementos positivos y enriquecedores más que como elementos que apuntan a
			las causas de las desigualdades.
		</p>
		<form
			id='tu-opinion'
			class='flex flex-col gap-[20px] w-full md:w-1/2 md:translate-x-full'
		>
			<label
				class='h-[30px] text-darkBlue font-tavares text-base'
				for='tu-opinion'
			>
				escribe tu palabra
			</label>
			<input
				class='h-[30px] px-3'
				type='text'
				name='text'
				placeholder='escibe tu palabra...'
				required
			/>
			<button
				class='h-[30px] self-end bg-darkBlue transition duration-300 hover:bg-lightBlue text-white w-1/2 font-tavares text-base'
				type='submit'
			>
				enviar ///
			</button>
		</form>
	</div>
</section>

<script>
	import {
		collection,
		query,
		where,
		getDocs,
		addDoc,
		updateDoc,
		increment,
	} from 'firebase/firestore';
	import { db } from '../../../lib/firebase/firebaseConfig';

	const form = document.querySelector('#tu-opinion') as HTMLFormElement;
	const wordCloud = document.querySelector('#wordcloud');

	if (form) {
		form.addEventListener('submit', async (e: SubmitEvent) => {
			e.preventDefault();

			const formData = new FormData(form);
			const text = formData.get('text')?.toString().trim().toLowerCase() || '';

			try {
				const opinionsRef = collection(db, 'opinions');
				const q = query(opinionsRef, where('text', '==', text));
				const snapshot = await getDocs(q);

				if (snapshot.empty) {
					await addDoc(opinionsRef, {
						text: text,
						value: 1,
					});
					console.log(text + ' added');
				} else {
					await updateDoc(snapshot.docs[0].ref, {
						value: increment(1),
					});
				}

				if (wordCloud) {
					wordCloud.scrollIntoView({ behavior: 'smooth' });
				}

				form.reset();
			} catch (error) {
				console.error('Error:', error);
			}
		});
	}
</script>
